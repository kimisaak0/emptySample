#pragma once
#include "obj.h"
#include "timer.h"

//쉐이더에 float 한개만 전달하고 싶어도 4개 단위로 전달이 된다.
struct VSCB
{
	D3DXVECTOR4 vColor; // c0
	D3DXVECTOR4 fC5; //c1
};



class sample
{
	timerC_DX m_Timer;

	Object_DX m_obj;
	VSCB      m_cbData;

	bool m_isBinary;
	bool m_bDynamic;
	
public:
	bool Init();
	bool Frame();
	bool Render();
	bool Release();

public:
	sample();
	~sample();
};



const BYTE g_VS[] =
{
	68,  88,  66,  67,  26, 180,
	218, 245, 115,  81, 191, 144,
	96, 131,  96, 164, 223, 211,
	37,  71,   1,   0,   0,   0,
	160,   2,   0,   0,   5,   0,
	0,   0,  52,   0,   0,   0,
	36,   1,   0,   0,  88,   1,
	0,   0, 172,   1,   0,   0,
	36,   2,   0,   0,  82,  68,
	69,  70, 232,   0,   0,   0,
	1,   0,   0,   0,  64,   0,
	0,   0,   1,   0,   0,   0,
	28,   0,   0,   0,   0,   4,
	254, 255,   0,   1,   0,   0,
	180,   0,   0,   0,  60,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   1,   0,
	0,   0,   0,   0,   0,   0,
	99,  98,  48,   0,  60,   0,
	0,   0,   2,   0,   0,   0,
	88,   0,   0,   0,  96,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0, 136,   0,
	0,   0,   0,   0,   0,   0,
	16,   0,   0,   0,   2,   0,
	0,   0, 140,   0,   0,   0,
	0,   0,   0,   0, 156,   0,
	0,   0,  84,   0,   0,   0,
	4,   0,   0,   0,   0,   0,
	0,   0, 164,   0,   0,   0,
	0,   0,   0,   0,  99,   0,
	171, 171,   1,   0,   3,   0,
	1,   0,   4,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	102,  84, 105, 109, 101,   0,
	171, 171,   0,   0,   3,   0,
	1,   0,   1,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	77, 105,  99, 114, 111, 115,
	111, 102, 116,  32,  40,  82,
	41,  32,  72,  76,  83,  76,
	32,  83, 104,  97, 100, 101,
	114,  32,  67, 111, 109, 112,
	105, 108, 101, 114,  32,  57,
	46,  50,  57,  46,  57,  53,
	50,  46,  51,  49,  49,  49,
	0, 171, 171, 171,  73,  83,
	71,  78,  44,   0,   0,   0,
	1,   0,   0,   0,   8,   0,
	0,   0,  32,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   3,   0,   0,   0,
	0,   0,   0,   0,  15,  15,
	0,   0,  80,  79,  83,  73,
	84,  73,  79,  78,   0, 171,
	171, 171,  79,  83,  71,  78,
	76,   0,   0,   0,   2,   0,
	0,   0,   8,   0,   0,   0,
	56,   0,   0,   0,   0,   0,
	0,   0,   1,   0,   0,   0,
	3,   0,   0,   0,   0,   0,
	0,   0,  15,   0,   0,   0,
	68,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	3,   0,   0,   0,   1,   0,
	0,   0,  15,   0,   0,   0,
	83,  86,  95,  80, 111, 115,
	105, 116, 105, 111, 110,   0,
	67,  79,  76,  79,  82,   0,
	171, 171,  83,  72,  68,  82,
	112,   0,   0,   0,  64,   0,
	1,   0,  28,   0,   0,   0,
	89,   0,   0,   4,  70, 142,
	32,   0,   0,   0,   0,   0,
	1,   0,   0,   0,  95,   0,
	0,   3, 242,  16,  16,   0,
	0,   0,   0,   0, 103,   0,
	0,   4, 242,  32,  16,   0,
	0,   0,   0,   0,   1,   0,
	0,   0, 101,   0,   0,   3,
	242,  32,  16,   0,   1,   0,
	0,   0,  54,   0,   0,   5,
	242,  32,  16,   0,   0,   0,
	0,   0,  70,  30,  16,   0,
	0,   0,   0,   0,  54,   0,
	0,   6, 242,  32,  16,   0,
	1,   0,   0,   0,  70, 142,
	32,   0,   0,   0,   0,   0,
	0,   0,   0,   0,  62,   0,
	0,   1,  83,  84,  65,  84,
	116,   0,   0,   0,   3,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   3,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   1,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   2,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0
};

const DWORD g_VSHex[] = {
	0x43425844, 0xf5dab41a,  0x90bf5173,  0xa4608360,
	0x4725d3df, 0x00000001,  0x000002a0,  0x00000005,
	0x00000034, 0x00000124,  0x00000158,  0x000001ac,
	0x00000224, 0x46454452,  0x000000e8,  0x00000001,
	0x00000040, 0x00000001,  0x0000001c,  0xfffe0400,
	0x00000100, 0x000000b4,  0x0000003c,  0x00000000,
	0x00000000, 0x00000000,  0x00000000,  0x00000000,
	0x00000001, 0x00000000,  0x00306263,  0x0000003c,
	0x00000002, 0x00000058,  0x00000060,  0x00000000,
	0x00000000, 0x00000088,  0x00000000,  0x00000010,
	0x00000002, 0x0000008c,  0x00000000,  0x0000009c,
	0x00000054, 0x00000004,  0x00000000,  0x000000a4,
	0x00000000, 0xabab0063,  0x00030001,  0x00040001,
	0x00000000, 0x00000000,  0x6d695466,  0xabab0065,
	0x00030000, 0x00010001,  0x00000000,  0x00000000,
	0x7263694d, 0x666f736f,  0x52282074,  0x4c482029,
	0x53204c53, 0x65646168,  0x6f432072,  0x6c69706d,
	0x39207265, 0x2e39322e,  0x2e323539,  0x31313133,
	0xababab00, 0x4e475349,  0x0000002c,  0x00000001,
	0x00000008, 0x00000020,  0x00000000,  0x00000000,
	0x00000003, 0x00000000,  0x00000f0f,  0x49534f50,
	0x4e4f4954, 0xababab00,  0x4e47534f,  0x0000004c,
	0x00000002, 0x00000008,  0x00000038,  0x00000000,
	0x00000001, 0x00000003,  0x00000000,  0x0000000f,
	0x00000044, 0x00000000,  0x00000000,  0x00000003,
	0x00000001, 0x0000000f,  0x505f5653,  0x7469736f,
	0x006e6f69, 0x4f4c4f43,  0xabab0052,  0x52444853,
	0x00000070,	0x00010040,	 0x0000001c,  0x04000059,
	0x00208e46,	0x00000000,	 0x00000001,  0x0300005f,
	0x001010f2,	0x00000000,  0x04000067,  0x001020f2,
	0x00000000,	0x00000001,  0x03000065,  0x001020f2,
	0x00000001,	0x05000036,  0x001020f2,  0x00000000,
	0x00101e46,	0x00000000,  0x06000036,  0x001020f2,
	0x00000001,	0x00208e46,  0x00000000,  0x00000000,
	0x0100003e,	0x54415453,  0x00000074,  0x00000003,
	0x00000000,	0x00000000,  0x00000003,  0x00000000,
	0x00000000,	0x00000000,  0x00000001,  0x00000000,
	0x00000000,	0x00000000,  0x00000000,  0x00000000,
	0x00000000,	0x00000000,  0x00000000,  0x00000000,
	0x00000000,	0x00000000,  0x00000002,  0x00000000,
	0x00000000,	0x00000000,  0x00000000,  0x00000000,
	0x00000000,	0x00000000,  0x00000000,  0x00000000,
};